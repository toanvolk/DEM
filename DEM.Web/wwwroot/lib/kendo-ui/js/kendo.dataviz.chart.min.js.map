{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","findAxisByName","name","axes","idx","prepareUserOptions","ChartAxis","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","toGeometryPoint","lintPoint","stepAxis","stepDir","axis","dir","result","GeometryPoint","anyHasZIndex","elements","defined","zIndex","hasGradientOverlay","overlay","gradient","forEach","callback","forEachReverse","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","appendIfNotNull","array","element","segmentVisible","fields","index","pointVisibility","visible","bindSegments","pointData","points","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","abs","total","equalsIgnoreCase","a","b","toLowerCase","filterSeriesByType","types","currentSeries","seriesTypes","concat","type","getDateField","intlService","parseDate","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","singleItemOrArray","seriesMissingValues","missingValues","AREA_REGEX","test","stack","ZERO","INTERPOLATE","hasValue$1","item","dataviz","convertableToNumber","findNext","ref","pointHasValue","outPoint","start","min","getter$$1","hasItem","createOutOfRangePoints","range","minPoint","maxPoint","hasMinPoint","hasMaxPoint","_outOfRangeMinPoint","_outOfRangeMaxPoint","isSingleAxis","pane","some","vertical","axisGroupBox","axisBox","contentBox","lineBox","wrap","clone","Box","paneAnchor","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","updateAxisOptions","targetOptions","axesOptions","CategoryAxis","categoryAxis","valueAxis","axisIndex","groupSeries","axisIx","grep","s","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","createDiv","className","closestHandle","hasClasses","updateAxisOptions$1","yAxis","xAxis","tooltipAlignment","angle","horizontal","radians","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","groupBySeriesIx","segments","segment","seriesSegments","seriesIx","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","DATA_FIELDS","triggerPaneRender","panes","notifyRender","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","X","Y","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","getTemplate","TextBox","ShapeElement","getSpacing","CurveProcessor","append","styleValue","BoxElement","limitValue","elementStyles","bindEvents","services","unbindEvents","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","transform","ChartPane","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","GAP","ABOVE","BELOW","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_AREA","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","VERTICAL_RANGE_AREA","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","LEGEND_ITEM_LEAVE","SERIES_CLICK","SERIES_HOVER","SERIES_OVER","SERIES_LEAVE","PLOT_AREA_CLICK","PLOT_AREA_HOVER","PLOT_AREA_LEAVE","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","PANE_RENDER","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","LinePoint","LineSegment","StepLineMixin","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","allPaneAxes","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","RangeLinePoint","AUTO","DEFAULT_FROM_FORMAT","DEFAULT_TO_FORMAT","RangeAreaPoint","RangeAreaSegment","SplineRangeAreaSegment","StepRangeAreaSegment","RangeAreaChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","AREA_SERIES","OUT_OF_RANGE_SERIES","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSELEAVE","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","visual","chartsVisual","chartContainer","_pane","plotArea","_plotArea","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","noteText","dataItem","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","clip","limitPoints","limitPoint","limittedSlot","limitSlot","equals","reverse","crossingValues","axisCrossingValues","slotX","slotY","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","categoryAt","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","over","out","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelTemplate","labelText","markers","_rendered","createMarker","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","unclipElements","noclip","padding","HIGHLIGHT_ZINDEX","toGeometryPoints","customVisual","segmentVisual","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","stepPoint","justified","previousPoint","curveProcessor","curve","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","createSegment","_addSegment","children","unshift","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","prevSegment","stackPoints","createFill","fill","createStroke","lineCap","strokeSegments","_strokeSegments","createStrokeSegments","segmentsFromPoints","stackSegments","createStackSegments","Segment","hasStackSegment","fillSegments","hasStackSegments","fillToAxes","fillPath","crossingValue","endSlot","firstPoint","lastPoint","end","controlOut","controlIn","previousSegment","_gapStackPoints","stackPoint","_stackPoints","endIdx","pointOffset","currentSeriesIx","gapStackPoint","startIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","textOptions","labelBox","top","bottom","alignToClipBox","parentBox","createLabel","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","rtl","gap","spacing","slots","slotSize","child","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","percBrightness","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","titleOptions","Title","buildTitle","appendAxis","appendAxisAt","splice","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","service","getService","paneIndex","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","setTitle","currentPane","paneOptions","panesLength","currentCrosshair","removeCrosshairs","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","detachLabels","reflowAxes","reflowCharts","redraw","panesArray","cleanGradients","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","visible$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","detachAxisGroupLabels","labelAxis","labelAxisCount","createLabelAxis","edge","onAxis","END","START","plotBands","reduce","acc","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","initLabelsFormat","fromPoint","toPoint","copyFields","fromBox","toBox","positionLabels","fromLabelPosition","toLabelPosition","toPoints","fromSegments","toPath","fromPath","createCurveSegments","segmentType","fromSlot","toSlot","oPoints","cPoints","lhPoints","oSlot","cSlot","createSegments","summary","totalCategories","prevPoint","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createRangeAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","_currentPointsCache","_seriesPointsCache","categoryField","aggregateSeries","filterSeries","outOfRangePoints","dataLength","_seriesMax","currentRangeIndices","clearSeriesPointsCache","seriesSourcePoints","srcCategories","srcData","getFn","categoriesHash","mapCategories","totalIndex","aggregator","categoryItem","categoryIdx","totalCount","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","rangeAreaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","DateCategoryAxis","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","alignItems","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","_unsetActivePoint","renderChildren","createContainers","createLegendTitle","createItems","userAlign","itemsContainer","hasTitle","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","createTitleLayout","appendTitleLayoutContent","layout","_registry","registry","match","observer","_dateAxis","initOptions","createElements","_index","onPane","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","direction","leftMask","rightMask","borderLeftWidth","borderRightWidth","mousewheel","_mousewheelHandler","_mousewheel","obj","_domEvents","DomEventsBuilder","stopPropagation","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","brightnessValue","themeLabels","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","constantAngle","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","pieCenter","bboxBottom","find","autoFit","reverseValue","second","originalX","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","valueAxisBox","heightDiff","valueRadius","onCircle","_polarAxisCenter","centerSegment","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","isFirstDataPoint","isLastDataPoint","slotAngle","slotSector","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initHandlers","_initSurface","bindCategories","FontLoader","preloadFonts","fontLoaded","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","applyDefaults","applySeriesColors","getSize","chartArea","resize","force","hasSize","_resize","_selections","_destroySelections","_setupSelection","_noTransitionsRedraw","_model","findPaneByName","findPaneByIndex","filter","seriesName","categoryName","togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","elementSize","renderAs","_destroySurface","Surface","_surfaceMouseenterHandler","_surfaceMouseleaveHandler","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","exportOptions","currentOptions","pannable","_pannable","zoomable","_zoomSelection","_mousewheelZoom","_toggleDragZoomEvents","allowDrag","requiresHandlers","allowZoom","_dragZoomEnabled","touchAction","_touchAction","_toggleDomEvents","drag","domEvents","toggleDrag","toggleZoom","_createSharedTooltip","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","selections","select","_selectStart","_select","_selectEnd","_clickHandler","_click","_mouseleaveHandler","_mouseleave","_mouseover","_mouseout","_mousemove","throttle","removeObserver","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","_hoveredPoint","hovered","cancel","_stopChartHandlers","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","leave","_startNavigation","_suppressHover","panning","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","inverseTransform","elementScale","invert","drawingElement","sharedTooltip","_startHover","_trackSharedTooltip","_propagateClick","handlingTap","activePoint","hoveredPoint","_activePoint","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","overPlotArea","_trackCrosshairs","pointArgs","hoverArgs","_tooltipCategoryIx","_sharedHighlight","hideElements","keepTooltipOpen","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","bindCategoryAxisFromSeries","dataIx","dataRow","uniqueCategories","HashMap","bindable","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","setDirection","setIntlService","noTransitionsRedraw","unbind","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","template","_slotCount","_groupIx","_groupValue","normalizeStyle","ChartInstanceObserver","proxyMembers","SeriesVisibilityState","geom","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","NOTE_LEAVE","DOCUMENT_ELEMENT","documentElement","CHANGE","DATABOUND","LEAVE","MOUSEDOWN","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","RTL","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_seriesVisibility","_initDataSource","_bindSeries","_bindCategories","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","originalChartArea","_seriesOptions","on","relatedTarget","autoHide","themes","themeName","SASS_THEMES","autoTheme","_initChart","_createChart","_isRtl","_onInit","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","save","_bindData","groupedSeries","view","grouped","seriesVisibility","read","applyByGroup","applyByIndex","seriesData","categoriesData","_bindCategoryAxis","isRtl","css","ExportMixin","PDFMixin","plugin","action","persistSeriesVisibility","saveState","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","downEvent","applyEventMap","guid","_closeTooltipHandler","_closeTooltip","_clearShowTimeout","remove","sharedTemplate","_offset","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","_hideElement","is","nameColumn","colorMarker","colspan","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":"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Q,IAASrC,IACTmD,GAAQd,EAAO8Q,KAAgBnT,EAAQoD,eAAef,KACnD2Q,EAAahT,EAAQqC,GACrB4Q,EAAgBF,EAAgB1Q,GAChCoC,GAAQwO,KACJC,EAA2B,OAAfF,EACZE,IAAczO,GAAQuO,UACfD,GAAgB1Q,GACnB6Q,SACOlT,GAAQqC,IAEZ4Q,GAAiB1P,GAASyP,IAC7BzP,GAAS0P,IACTH,EAAmBG,EAAeD,KAO1D,QAASI,IAAkBC,GACvB,IAAK,GAAIzR,GAAM,EAAGA,EAAMyR,EAAM5V,OAAQmE,IAClCyR,EAAMzR,GAAK0R,eA/mXtB,GAEO9K,IACA7J,GACAwD,GACAoR,GACAC,GACAC,GACAC,GACA9F,GACAK,GACAD,GACAF,GACA6F,GACAC,GACAC,GACAC,GACAjG,GACAkG,GACAlM,GACA2F,GACAwG,GACAvP,GACAlC,GACA8C,GACA4O,GACAvF,GACAtE,GACA8J,GACAC,GACAhR,GACAE,GACAC,GACAC,GACApC,GACAoR,GACA6B,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAnO,GACAgB,GACAoN,GACAxJ,GACAyJ,GACAtH,GACAuH,GACApJ,GACAqJ,GACAlI,GACAmI,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAnR,GACAoR,GACA5T,GA+BA6T,GAUAC,GAkBAC,GA8EAzP,GAiHA0P,GACAC,GACAC,GACAC,GACAC,GA2GAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA5O,GACAC,GACA4O,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAaAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var X = datavizConstants.X;\n        var Y = datavizConstants.Y;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var last = dataviz.last;\n        var eventElement = dataviz.eventElement;\n        var getTemplate = dataviz.getTemplate;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var CurveProcessor = dataviz.CurveProcessor;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var limitValue = dataviz.limitValue;\n        var grep = dataviz.grep;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var services = dataviz.services;\n        var unbindEvents = dataviz.unbindEvents;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        function findAxisByName(name, axes) {\n            for (var idx = 0; idx < axes.length; idx++) {\n                if (axes[idx].options.name === name) {\n                    axes[idx].prepareUserOptions();\n                    return new ChartAxis(axes[idx]);\n                }\n            }\n        }\n        var ChartPane = kendo.Class.extend({\n            init: function (pane) {\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this._pane = pane;\n            },\n            findAxisByName: function (name) {\n                return findAxisByName(name, this._pane.axes);\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        if (srcFieldName !== null) {\n                            value[fieldName] = getField(srcFieldName, object);\n                        }\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] !== null ? series[sourceFieldName] || fieldName : null);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_AREA = 'rangeArea';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var VERTICAL_RANGE_AREA = 'verticalRangeArea';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var LEGEND_ITEM_LEAVE = 'legendItemLeave';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var SERIES_OVER = 'seriesOver';\n        var SERIES_LEAVE = 'seriesLeave';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var PLOT_AREA_LEAVE = 'plotAreaLeave';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var PANE_RENDER = 'paneRender';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            LEGEND_ITEM_LEAVE: LEGEND_ITEM_LEAVE,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            SERIES_OVER: SERIES_OVER,\n            SERIES_LEAVE: SERIES_LEAVE,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_AREA: RANGE_AREA,\n            VERTICAL_RANGE_AREA: VERTICAL_RANGE_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            PLOT_AREA_LEAVE: PLOT_AREA_LEAVE,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            PANE_RENDER: PANE_RENDER,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            ABOVE: ABOVE,\n            BELOW: BELOW\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    dataviz.convertableToNumber(point.value) ? point.value : axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.noteText = data.fields.noteText;\n                    if (!defined(point.dataItem)) {\n                        point.dataItem = series.data[categoryIx];\n                    }\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = this$1.valueSlot(valueAxis, plotRange);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                if (!this.options.clip && this.options.limitPoints && this.points.length) {\n                    this.limitPoints();\n                }\n                this.box = targetBox;\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                return valueAxis.getSlot(plotRange[0], plotRange[1], !this.options.clip);\n            },\n            limitPoints: function () {\n                var this$1 = this;\n                var categoryPoints = this.categoryPoints;\n                var points = categoryPoints[0].concat(last(categoryPoints));\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx]) {\n                        this$1.limitPoint(points[idx]);\n                    }\n                }\n            },\n            limitPoint: function (point) {\n                var limittedSlot = this.categoryAxis.limitSlot(point.box);\n                if (!limittedSlot.equals(point.box)) {\n                    point.reflow(limittedSlot);\n                }\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = this$1.categoryAxis.categoryAt(categoryIx);\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            categoriesCount: count,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx,\n                        dataItem: outOfRangePoint.item\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true,\n            limitPoints: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            over: function (chart, e) {\n                return chart.trigger(SERIES_OVER, this.eventArgs(e));\n            },\n            out: function (chart, e) {\n                return chart.trigger(SERIES_LEAVE, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var pointData = this.pointData();\n                    var labelText = this.value;\n                    if (labelTemplate) {\n                        labelText = labelTemplate(pointData);\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels), pointData);\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            },\n            unclipElements: function () {\n                if (this.label) {\n                    this.label.options.noclip = true;\n                }\n                if (this.note) {\n                    this.note.options.noclip = true;\n                }\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    series: this.series\n                };\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function () {\n                return this.toGeometryPoints(this.linePoints);\n            },\n            toGeometryPoints: function (points) {\n                var result = [];\n                for (var i = 0, length = points.length; i < length; i++) {\n                    if (points[i] && points[i].visible !== false) {\n                        result.push(points[i]._childBox.toRect().center());\n                    }\n                }\n                return result;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var customVisual = this.series.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        points: this.toGeometryPoints(this.linePoints),\n                        series: this.series,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            this$1.segmentVisual();\n                            return this$1.visual;\n                        }\n                    });\n                    if (this.visual && !defined(this.visual.options.zIndex)) {\n                        this.visual.options.zIndex = this.series.zIndex;\n                    }\n                } else {\n                    this.segmentVisual();\n                }\n            },\n            segmentVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineMixin = {\n            calculateStepPoints: function (points) {\n                var categoryAxis = this.parent.plotArea.seriesCategoryAxis(this.series);\n                var ref = categoryAxis.options;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var stepAxis = vertical ? X : Y;\n                var axis = vertical ? Y : X;\n                var stepDir = reverse ? 2 : 1;\n                var dir = stepDir;\n                var previousPoint = toGeometryPoint(points[0], stepAxis, stepDir, axis, dir);\n                var result = [previousPoint];\n                for (var idx = 1; idx < points.length; idx++) {\n                    var point = toGeometryPoint(points[idx], stepAxis, stepDir, axis, dir);\n                    if (previousPoint[stepAxis] !== point[stepAxis]) {\n                        var stepPoint = new GeometryPoint();\n                        stepPoint[stepAxis] = previousPoint[stepAxis];\n                        stepPoint[axis] = point[axis];\n                        result.push(stepPoint, point);\n                    }\n                    previousPoint = point;\n                }\n                if (!justified) {\n                    result.push(toGeometryPoint(last(points), stepAxis, stepDir, axis, reverse ? 1 : 2));\n                } else if (previousPoint !== last(result)) {\n                    result.push(previousPoint);\n                }\n                return result;\n            }\n        };\n        function toGeometryPoint(lintPoint, stepAxis, stepDir, axis, dir) {\n            var box = lintPoint.box;\n            var result = new GeometryPoint();\n            result[stepAxis] = box[stepAxis + stepDir];\n            result[axis] = box[axis + dir];\n            return result;\n        }\n        var StepLineSegment = LineSegment.extend({\n            points: function () {\n                return this.calculateStepPoints(this.linePoints);\n            }\n        });\n        deepExtend(StepLineSegment.prototype, StepLineMixin);\n        var SplineSegment = LineSegment.extend({\n            segmentVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.size();\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, currentSeries, seriesIx, prevSegment, stackPoints) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.stackPoints = stackPoints;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var lineOptions = series.line || {};\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                if (lineOptions.width > 0 && lineOptions.visible !== false) {\n                    this.createStroke({\n                        stroke: deepExtend({\n                            color: color,\n                            opacity: series.opacity,\n                            lineCap: 'butt'\n                        }, lineOptions)\n                    });\n                }\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    segments = this._strokeSegments = this.createStrokeSegments();\n                }\n                return segments;\n            },\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.points());\n            },\n            stackSegments: function () {\n                if (this.prevSegment) {\n                    return this.prevSegment.createStackSegments(this.stackPoints);\n                }\n                return this.createStackSegments(this.stackPoints);\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.toGeometryPoints(stackPoints)).reverse();\n            },\n            segmentsFromPoints: function (points) {\n                return points.map(function (point) {\n                    return new geometry.Segment(point);\n                });\n            },\n            createStroke: function (style) {\n                var stroke = new Path(style);\n                stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                this.visual.append(stroke);\n            },\n            hasStackSegment: function () {\n                return this.prevSegment || this.stackPoints && this.stackPoints.length;\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var hasStackSegments = this.hasStackSegment();\n                if (hasStackSegments) {\n                    var stackSegments = this.stackSegments();\n                    append(fillSegments, stackSegments);\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                if (!hasStackSegments && strokeSegments.length > 1) {\n                    this.fillToAxes(fill);\n                }\n                this.visual.append(fill);\n            },\n            fillToAxes: function (fillPath) {\n                var chart = this.parent;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var crossingValue = chart.categoryAxisCrossingValue(valueAxis);\n                var endSlot = valueAxis.getSlot(crossingValue, crossingValue, true);\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? endSlot.x1 : endSlot.y1;\n                if (invertAxes) {\n                    fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                } else {\n                    fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                }\n            }\n        });\n        var StepAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.linePoints));\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.calculateStepPoints(stackPoints)).reverse();\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, StepLineMixin);\n        var SplineAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var linePoints = this.points();\n                return curveProcessor.process(linePoints);\n            },\n            createStackSegments: function () {\n                var strokeSegments = this.strokeSegments();\n                var stackSegments = [];\n                for (var idx = strokeSegments.length - 1; idx >= 0; idx--) {\n                    var segment = strokeSegments[idx];\n                    stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                }\n                return stackSegments;\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                        previousSegment = prevSegment;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var length = linePoints.length;\n                if (startIdx < 0) {\n                    startIdx = 0;\n                    length--;\n                }\n                var endIdx = startIdx + length;\n                var pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n                    var pointIx = categoryIx + pointOffset;\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][pointIx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(categoryIx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, pointIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][pointIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options, pointData) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options, pointData);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var pointData = this.pointData();\n                    var labelTemplate = getTemplate(labels);\n                    var labelText;\n                    if (labelTemplate) {\n                        labelText = labelTemplate(pointData);\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels), pointData);\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    series: this.series\n                };\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        function forEach(elements, callback) {\n            elements.forEach(callback);\n        }\n        function forEachReverse(elements, callback) {\n            var length = elements.length;\n            for (var idx = length - 1; idx >= 0; idx--) {\n                callback(elements[idx], idx - length - 1);\n            }\n        }\n        var ClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                this.forEach(children, function (child, idx) {\n                    var childBox = (child.box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    child.reflow(childBox);\n                    if (idx < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                });\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if ((this.options.border || {}).color) {\n                    return this.options.border.color;\n                }\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        Bubble.prototype.defaults.highlight.zIndex = undefined;\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n                this.visible = true;\n            },\n            hide: function () {\n                if (this.chartService) {\n                    this.chartService.notify(HIDE_TOOLTIP);\n                }\n                this.visible = false;\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    alignPathToPixel(clipPath);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            if (point.unclipElements) {\n                                point.unclipElements();\n                            } else {\n                                var label = point.label;\n                                var note = point.note;\n                                if (label && label.options.visible) {\n                                    if (label.alignToClipBox) {\n                                        label.alignToClipBox(clipBox);\n                                    }\n                                    label.options.noclip = true;\n                                }\n                                if (note && note.options.visible) {\n                                    note.options.noclip = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendAxisAt: function (axis, pos) {\n                this.content.append(axis);\n                this.axes.splice(pos, 0, axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n                this.notifyRender();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            },\n            notifyRender: function () {\n                var service = this.getService();\n                if (service) {\n                    service.notify(PANE_RENDER, {\n                        pane: new ChartPane(this),\n                        index: this.paneIndex,\n                        name: this.options.name\n                    });\n                }\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function bindSegments(series) {\n            var data = series.data;\n            var points = [];\n            var sum = 0;\n            var count = 0;\n            for (var idx = 0; idx < data.length; idx++) {\n                var pointData = SeriesBinder.current.bindPoint(series, idx);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value)) {\n                    pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n                    pointData.value = Math.abs(value);\n                    points.push(pointData);\n                    if (pointData.visible) {\n                        sum += pointData.value;\n                    }\n                    if (value !== 0) {\n                        count++;\n                    }\n                } else {\n                    points.push(null);\n                }\n            }\n            return {\n                total: sum,\n                points: points,\n                count: count\n            };\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        var AREA_REGEX = /area/i;\n        function seriesMissingValues(series) {\n            if (series.missingValues) {\n                return series.missingValues;\n            }\n            return AREA_REGEX.test(series.type) || series.stack ? ZERO : INTERPOLATE;\n        }\n        function hasValue$1(series, item) {\n            var fields = SeriesBinder.current.bindPoint(series, null, item);\n            var valueFields = fields.valueFields;\n            for (var field in valueFields) {\n                if (dataviz.convertableToNumber(valueFields[field])) {\n                    return true;\n                }\n            }\n        }\n        function findNext(ref) {\n            var start = ref.start;\n            var dir = ref.dir;\n            var min = ref.min;\n            var max = ref.max;\n            var getter$$1 = ref.getter;\n            var hasItem = ref.hasItem;\n            var series = ref.series;\n            var pointHasValue, outPoint;\n            var idx = start;\n            do {\n                idx += dir;\n                if (hasItem(idx)) {\n                    outPoint = getter$$1(idx);\n                    pointHasValue = hasValue$1(series, outPoint.item);\n                }\n            } while (min <= idx && idx <= max && !pointHasValue);\n            if (pointHasValue) {\n                return outPoint;\n            }\n        }\n        function createOutOfRangePoints(series, range, count, getter$$1, hasItem) {\n            var min = range.min;\n            var max = range.max;\n            var hasMinPoint = min > 0 && min < count;\n            var hasMaxPoint = max + 1 < count;\n            if (hasMinPoint || hasMaxPoint) {\n                var missingValues = seriesMissingValues(series);\n                var minPoint, maxPoint;\n                if (missingValues !== INTERPOLATE) {\n                    if (hasMinPoint) {\n                        minPoint = getter$$1(min - 1);\n                    }\n                    if (hasMaxPoint) {\n                        maxPoint = getter$$1(max + 1);\n                    }\n                } else {\n                    var outPoint, pointHasValue;\n                    if (hasMinPoint) {\n                        outPoint = getter$$1(min - 1);\n                        pointHasValue = hasValue$1(series, outPoint.item);\n                        if (!pointHasValue) {\n                            minPoint = findNext({\n                                start: min,\n                                dir: -1,\n                                min: 0,\n                                max: count - 1,\n                                getter: getter$$1,\n                                hasItem: hasItem,\n                                series: series\n                            });\n                        } else {\n                            minPoint = outPoint;\n                        }\n                    }\n                    if (hasMaxPoint) {\n                        outPoint = getter$$1(max + 1);\n                        pointHasValue = hasValue$1(series, outPoint.item);\n                        if (!pointHasValue) {\n                            maxPoint = findNext({\n                                start: max,\n                                dir: 1,\n                                min: 0,\n                                max: count - 1,\n                                getter: getter$$1,\n                                hasItem: hasItem,\n                                series: series\n                            });\n                        } else {\n                            maxPoint = outPoint;\n                        }\n                    }\n                }\n                if (minPoint) {\n                    series._outOfRangeMinPoint = minPoint;\n                }\n                if (maxPoint) {\n                    series._outOfRangeMaxPoint = maxPoint;\n                }\n            }\n        }\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend = this.options.legend || {};\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.originalOptions = options;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var defaults = { title: { color: (this.options.title || {}).color } };\n                var panes = [];\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                function setTitle(options, defaults) {\n                    if (isString(options.title)) {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (var i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, axis.options.crosshair);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name;\n                    var labelTemplate = seriesVisible ? getTemplate(labels) : getTemplate(inactiveItemsLabels) || getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: hasValue(text) ? text : '',\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.detachLabels();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                var root = this.getRoot();\n                if (root) {\n                    root.cleanGradients();\n                }\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.detachLabels();\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var visible = axis.options.visible !== false;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            leftAnchors[paneId] = axis;\n                        }\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            rightAnchors[paneId] = axis;\n                        }\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var visible$1 = axis$1.options.visible !== false;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            topAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            bottomAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var panes = ref.panes;\n                var axes = allPaneAxes(panes);\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            },\n            detachLabels: function () {\n                var axes = this.groupAxes(this.panes);\n                var xAxes = axes.x;\n                var yAxes = axes.y;\n                this.detachAxisGroupLabels(yAxes, xAxes);\n                this.detachAxisGroupLabels(xAxes, yAxes);\n            },\n            detachAxisGroupLabels: function (axes, crossingAxes) {\n                var this$1 = this;\n                var labelAxisCount = 0;\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var pane = axis.pane;\n                    var anchor = paneAnchor(crossingAxes, pane) || crossingAxes[0];\n                    var axisIndex = i + labelAxisCount;\n                    var labelAxis = this$1.createLabelAxis(axis, axisIndex, anchor);\n                    if (labelAxis) {\n                        labelAxisCount++;\n                        var pos = pane.axes.indexOf(axis) + labelAxisCount;\n                        pane.appendAxisAt(labelAxis, pos);\n                    }\n                }\n            },\n            createLabelAxis: function (axis, axisIndex, anchor) {\n                var labelOptions = axis.options.labels;\n                var position = labelOptions.position;\n                var onAxis = position !== datavizConstants.END && position !== datavizConstants.START;\n                var visible = labelOptions.visible;\n                if (onAxis || visible === false) {\n                    return null;\n                }\n                var allAxes = this.groupAxes(this.panes);\n                var crossingAxes = anchor.options.vertical ? allAxes.x : allAxes.y;\n                var anchorCrossings = this.axisCrossingValues(anchor, crossingAxes);\n                var end = position === datavizConstants.END;\n                var range = anchor.range();\n                var edge = end ? range.max : range.min;\n                var crossingValue = limitValue(anchorCrossings[axisIndex], range.min, range.max);\n                if (crossingValue - edge === 0) {\n                    return null;\n                }\n                anchorCrossings.splice(axisIndex + 1, 0, edge);\n                anchor.options.axisCrossingValues = anchorCrossings;\n                var labelAxis = axis.clone();\n                axis.clear();\n                labelAxis.options.name = undefined;\n                labelAxis.options.line.visible = false;\n                labelAxis.options.crosshair = undefined;\n                labelAxis.options.notes = undefined;\n                labelAxis.options.plotBands = undefined;\n                return labelAxis;\n            }\n        });\n        function isSingleAxis(axis) {\n            return !axis.pane.axes.some(function (a) {\n                return a.options.vertical === axis.options.vertical && a !== axis && a.options.visible !== false;\n            });\n        }\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            for (var i = 0; i < length; i++) {\n                var axis = axes[i];\n                var visible = axis.options.visible !== false;\n                if (visible || isSingleAxis(axis)) {\n                    var axisBox = visible ? axis.contentBox() : axis.lineBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        var allPaneAxes = function (panes) {\n            return panes.reduce(function (acc, pane) {\n                return acc.concat(pane.axes);\n            }, []);\n        };\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelTemplate = getTemplate(options);\n                var pointData = this.pointData();\n                var labelText;\n                if (labelTemplate) {\n                    labelText = labelTemplate(pointData);\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options), pointData);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var RangeLinePoint = LinePoint.extend({\n            aliasFor: function () {\n                return this.parent;\n            }\n        });\n        var AUTO = 'auto';\n        var DEFAULT_FROM_FORMAT = '{0}';\n        var DEFAULT_TO_FORMAT = '{1}';\n        var RangeAreaPoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n                this.initLabelsFormat();\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                var value = this.value;\n                var fromPoint = this.fromPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.from,\n                    markers: markers.from\n                }));\n                var toPoint = this.toPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.to,\n                    markers: markers.to\n                }));\n                this.copyFields(fromPoint);\n                this.copyFields(toPoint);\n                this.append(fromPoint);\n                this.append(toPoint);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var fromBox = targetBox.from;\n                var toBox = targetBox.to;\n                this.positionLabels(fromBox, toBox);\n                this.fromPoint.reflow(fromBox);\n                this.toPoint.reflow(toBox);\n                this.box = this.fromPoint.markerBox().clone().wrap(this.toPoint.markerBox());\n            },\n            createHighlight: function () {\n                var group = new Group();\n                group.append(this.fromPoint.createHighlight());\n                group.append(this.toPoint.createHighlight());\n                return group;\n            },\n            highlightVisual: function () {\n                return this.visual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    from: this.fromPoint.highlightVisualArgs(),\n                    to: this.toPoint.highlightVisualArgs()\n                };\n            },\n            tooltipAnchor: function () {\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(this.box);\n                if (showTooltip) {\n                    var box = this.box;\n                    var center = box.center();\n                    var horizontalAlign = LEFT;\n                    var x, y, verticalAlign;\n                    if (this.options.vertical) {\n                        x = center.x;\n                        y = box.y1 - TOOLTIP_OFFSET;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        x = box.x2 + TOOLTIP_OFFSET;\n                        y = center.y;\n                        verticalAlign = CENTER;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            unclipElements: function () {\n                this.fromPoint.unclipElements();\n                this.toPoint.unclipElements();\n            },\n            initLabelsFormat: function () {\n                var labels = this.options.labels;\n                if (!labels.format) {\n                    if (!labels.from || !labels.from.format) {\n                        labels.from = $.extend({}, labels.from, { format: DEFAULT_FROM_FORMAT });\n                    }\n                    if (!labels.to || !labels.to.format) {\n                        labels.to = $.extend({}, labels.to, { format: DEFAULT_TO_FORMAT });\n                    }\n                }\n            },\n            positionLabels: function (fromBox, toBox) {\n                var ref = this.options;\n                var labels = ref.labels;\n                var vertical = ref.vertical;\n                if (labels.position === AUTO) {\n                    var fromLabelPosition, toLabelPosition;\n                    if (vertical) {\n                        if (toBox.y1 <= fromBox.y1) {\n                            toLabelPosition = ABOVE;\n                            fromLabelPosition = BELOW;\n                        } else {\n                            toLabelPosition = BELOW;\n                            fromLabelPosition = ABOVE;\n                        }\n                    } else {\n                        if (toBox.x1 <= fromBox.x1) {\n                            toLabelPosition = LEFT;\n                            fromLabelPosition = RIGHT;\n                        } else {\n                            toLabelPosition = RIGHT;\n                            fromLabelPosition = LEFT;\n                        }\n                    }\n                    if (!labels.from || !labels.from.position) {\n                        this.fromPoint.options.labels.position = fromLabelPosition;\n                    }\n                    if (!labels.to || !labels.to.position) {\n                        this.toPoint.options.labels.position = toLabelPosition;\n                    }\n                }\n            },\n            copyFields: function (point) {\n                point.dataItem = this.dataItem;\n                point.category = this.category;\n                point.series = this.series;\n                point.color = this.color;\n                point.owner = this.owner;\n            }\n        });\n        deepExtend(RangeAreaPoint.prototype, PointEventsMixin);\n        deepExtend(RangeAreaPoint.prototype, NoteMixin);\n        RangeAreaPoint.prototype.defaults = {\n            markers: {\n                visible: false,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                position: AUTO\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: WHITE,\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            tooltip: { format: '{0} - {1}' }\n        };\n        var RangeAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.toGeometryPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.toGeometryPoints(this.fromPoints().reverse()));\n                }\n                return fromSegments;\n            },\n            createStroke: function (style) {\n                var toPath = new Path(style);\n                var fromPath = new Path(style);\n                toPath.segments.push.apply(toPath.segments, this.strokeSegments());\n                fromPath.segments.push.apply(fromPath.segments, this.stackSegments());\n                this.visual.append(toPath);\n                this.visual.append(fromPath);\n            },\n            hasStackSegment: function () {\n                return true;\n            },\n            fromPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.fromPoint;\n                });\n            },\n            toPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.toPoint;\n                });\n            }\n        });\n        var SplineRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.createCurveSegments(this.toPoints());\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.createCurveSegments(this.fromPoints().reverse());\n                }\n                return fromSegments;\n            },\n            createCurveSegments: function (points) {\n                var curveProcessor = new CurveProcessor();\n                return curveProcessor.process(this.toGeometryPoints(points));\n            }\n        });\n        var StepRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.calculateStepPoints(this.fromPoints()));\n                    fromSegments.reverse();\n                }\n                return fromSegments;\n            }\n        });\n        deepExtend(StepRangeAreaSegment.prototype, StepLineMixin);\n        var RangeAreaChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            pointType: function () {\n                return RangeAreaPoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                if (!hasValue(value.from) && !hasValue(value.to)) {\n                    if (this.seriesMissingValues(series) === ZERO) {\n                        value = {\n                            from: 0,\n                            to: 0\n                        };\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new RangeAreaPoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segmentType;\n                if (style === 'smooth') {\n                    segmentType = SplineRangeAreaSegment;\n                } else if (style === 'step') {\n                    segmentType = StepRangeAreaSegment;\n                } else {\n                    segmentType = RangeAreaSegment;\n                }\n                return new segmentType(linePoints, currentSeries, seriesIx);\n            },\n            plotRange: function (point, startValue) {\n                if (!point) {\n                    return [\n                        startValue,\n                        startValue\n                    ];\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                var fromSlot = valueAxis.getSlot(plotRange[0], plotRange[0], !this.options.clip);\n                var toSlot = valueAxis.getSlot(plotRange[1], plotRange[1], !this.options.clip);\n                if (fromSlot && toSlot) {\n                    return {\n                        from: fromSlot,\n                        to: toSlot\n                    };\n                }\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var from = valueSlot.from;\n                var to = valueSlot.to;\n                var fromSlot, toSlot;\n                if (this.options.invertAxes) {\n                    fromSlot = new Box(from.x1, categorySlot.y1, from.x2, categorySlot.y2);\n                    toSlot = new Box(to.x1, categorySlot.y1, to.x2, categorySlot.y2);\n                } else {\n                    fromSlot = new Box(categorySlot.x1, from.y1, categorySlot.x2, from.y2);\n                    toSlot = new Box(categorySlot.x1, to.y1, categorySlot.x2, to.y2);\n                }\n                return {\n                    from: fromSlot,\n                    to: toSlot\n                };\n            },\n            addValue: function (data, fields) {\n                var valueFields = data.valueFields;\n                if (!isNumber(valueFields.from)) {\n                    valueFields.from = valueFields.to;\n                }\n                if (!isNumber(valueFields.to)) {\n                    valueFields.to = valueFields.from;\n                }\n                CategoricalChart.fn.addValue.call(this, data, fields);\n            },\n            updateRange: function (value, fields) {\n                if (value !== null && isNumber(value.from) && isNumber(value.to)) {\n                    var axisName = fields.series.axis;\n                    var axisRange = this.valueAxisRanges[axisName] = this.valueAxisRanges[axisName] || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    var from = value.from;\n                    var to = value.to;\n                    axisRange.min = Math.min(axisRange.min, from, to);\n                    axisRange.max = Math.max(axisRange.max, from, to);\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.from, value.to);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point) {\n                        result.push((point.fromPoint || {}).marker);\n                        result.push((point.toPoint || {}).marker);\n                    }\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(RangeAreaChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: this$1.categoryAxis.categoryAt(categoryIx),\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        var AREA_SERIES = [\n            AREA,\n            VERTICAL_AREA,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ];\n        var OUT_OF_RANGE_SERIES = [\n            LINE,\n            VERTICAL_LINE\n        ].concat(AREA_SERIES);\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        VERTICAL_RANGE_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createRangeAreaChart(filterSeriesByType(series, [\n                    RANGE_AREA,\n                    VERTICAL_RANGE_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                this._currentPointsCache = {};\n                this._seriesPointsCache = this._seriesPointsCache || {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this._seriesPointsCache = this._currentPointsCache;\n                this._currentPointsCache = null;\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var dataLength = (series.data || {}).length;\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, dataLength);\n                if (!(isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max))) {\n                    return series;\n                }\n                var range = categoryAxis.currentRangeIndices();\n                var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n                var currentSeries = deepExtend({}, series);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max + 1);\n                if (outOfRangePoints) {\n                    createOutOfRangePoints(currentSeries, range, dataLength, function (idx) {\n                        return {\n                            item: series.data[idx],\n                            category: categoryAxis.categoryAt(idx, true),\n                            categoryIx: idx - range.min\n                        };\n                    }, function (idx) {\n                        return defined(series.data[idx]);\n                    });\n                }\n                return currentSeries;\n            },\n            clearSeriesPointsCache: function () {\n                this._seriesPointsCache = {};\n            },\n            seriesSourcePoints: function (series, categoryAxis) {\n                var this$1 = this;\n                var key = series.index + ';' + categoryAxis.categoriesHash();\n                if (this._seriesPointsCache[key]) {\n                    this._currentPointsCache[key] = this._seriesPointsCache[key];\n                    return this._seriesPointsCache[key];\n                }\n                var axisOptions = categoryAxis.options;\n                var srcCategories = axisOptions.srcCategories;\n                var dateAxis = equalsIgnoreCase(axisOptions.type, DATE);\n                var srcData = series.data;\n                var getFn = dateAxis ? getDateField : getField;\n                var result = [];\n                if (!dateAxis) {\n                    categoryAxis.mapCategories();\n                }\n                for (var idx = 0; idx < srcData.length; idx++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[idx], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[idx];\n                    }\n                    if (defined(category) && category !== null) {\n                        var categoryIx = categoryAxis.totalIndex(category);\n                        result[categoryIx] = result[categoryIx] || {\n                            items: [],\n                            category: category\n                        };\n                        result[categoryIx].items.push(idx);\n                    }\n                }\n                this._currentPointsCache[key] = result;\n                return result;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var srcData = series.data;\n                if (!srcData.length) {\n                    return series;\n                }\n                var srcPoints = this.seriesSourcePoints(series, categoryAxis);\n                var result = deepExtend({}, series);\n                var aggregator = new SeriesAggregator(deepExtend({}, series), SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                var dataItems = categoryAxis.options.dataItems || [];\n                var range = categoryAxis.currentRangeIndices();\n                var categoryItem = function (idx) {\n                    var categoryIdx = idx - range.min;\n                    var point = srcPoints[idx];\n                    if (!point) {\n                        point = srcPoints[idx] = {};\n                    }\n                    point.categoryIx = categoryIdx;\n                    if (!point.item) {\n                        var category = categoryAxis.categoryAt(idx, true);\n                        point.category = category;\n                        point.item = aggregator.aggregatePoints(point.items, category);\n                    }\n                    return point;\n                };\n                for (var idx = range.min; idx <= range.max; idx++) {\n                    var point = categoryItem(idx);\n                    data[point.categoryIx] = point.item;\n                    if (point.items && point.items.length) {\n                        dataItems[point.categoryIx] = point.item;\n                    }\n                }\n                if (inArray(result.type, OUT_OF_RANGE_SERIES)) {\n                    createOutOfRangePoints(result, range, categoryAxis.totalCount(), categoryItem, function (idx) {\n                        return srcPoints[idx];\n                    });\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                if (categoriesToAdd > 0) {\n                    categories = categoryAxis.options.categories = categoryAxis.options.categories.slice(0);\n                    while (categoriesToAdd--) {\n                        categories.push('');\n                    }\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createRangeAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var rangeAreaChart = new RangeAreaChart(this, {\n                    invertAxes: this.invertAxes,\n                    series: series,\n                    clip: pane.options.clip\n                });\n                this.appendChart(rangeAreaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (inArray(currentSeries.type, AREA_SERIES)) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            reverse: !invertAxes && this$1.chartService.rtl,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new dataviz.DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        definitions[i].categories = categoryAxis.options.srcCategories;\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, AREA_SERIES)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = {\n                    vertical: !invertAxes,\n                    reverse: invertAxes && this.chartService.rtl\n                };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                updateAxisOptions(this.options, axis, options);\n                updateAxisOptions(this.originalOptions, axis, options);\n            }\n        });\n        function updateAxisOptions(targetOptions, axis, options) {\n            var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n            deepExtend(axesOptions[axis.axisIndex], options);\n        }\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: {},\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    var clipBox = zoomPane ? zoomPane.chartsBox().clone() : null;\n                    if (zoomPane && clipBox) {\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical) && defined(axis.axisIndex)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                var plotArea = this.chart._plotArea;\n                if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal',\n                    reverse: options.rtl,\n                    alignItems: vertical ? 'start' : 'center'\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                if (!options.rtl) {\n                    this.createMarker();\n                    this.createLabel();\n                } else {\n                    this.createLabel();\n                    this.createMarker();\n                }\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER,\n                    spacing: this.options.spacing\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args) && e && e.type === 'contextmenu') {\n                    e.preventDefault();\n                }\n            },\n            over: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            out: function (widget, e) {\n                widget._unsetActivePoint();\n                widget.trigger(LEGEND_ITEM_LEAVE, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = {};\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainers();\n                this.createLegendTitle(options.title);\n                this.createItems();\n            },\n            createContainers: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                if (this.hasTitle()) {\n                    this.itemsContainer = new BoxElement({\n                        vAlign: vAlign,\n                        align: align,\n                        zIndex: options.zIndex,\n                        shrinkToFit: true\n                    });\n                } else {\n                    this.itemsContainer = this.container;\n                }\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing,\n                    rtl: chartService.rtl\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels,\n                        rtl: chartService.rtl\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.itemsContainer.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n                if (this.hasTitle()) {\n                    this.title.reflow(new Box(this.container.box.x1, this.title.box.y1, this.container.box.x2, this.title.box.y2));\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            },\n            createLegendTitle: function (title) {\n                var titleOptions = deepExtend({}, {\n                    color: BLACK,\n                    position: TOP,\n                    align: CENTER\n                }, title);\n                var text = titleOptions.text;\n                if (!title || title.visible === false) {\n                    return;\n                }\n                if (defined(titleOptions) && titleOptions.visible) {\n                    var labelTemplate = getTemplate(titleOptions);\n                    if (labelTemplate) {\n                        text = labelTemplate({ text: text });\n                    } else if (titleOptions.format) {\n                        text = this.chartService.format.auto(titleOptions.format, text);\n                    }\n                }\n                this.title = new TextBox(text, titleOptions);\n                this.createTitleLayout();\n                this.appendTitleLayoutContent();\n            },\n            createTitleLayout: function () {\n                this.layout = new dataviz.FloatElement({\n                    vertical: true,\n                    wrap: false\n                });\n                this.container.append(this.layout);\n            },\n            hasTitle: function () {\n                return Boolean(this.options.title && this.options.title.visible !== false);\n            },\n            appendTitleLayoutContent: function () {\n                var options = this.options;\n                if (options.title.position === BOTTOM) {\n                    this.layout.append(this.itemsContainer);\n                    this.layout.append(this.title);\n                } else {\n                    this.layout.append(this.title);\n                    this.layout.append(this.itemsContainer);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: {\n                cursor: POINTER,\n                spacing: 6\n            },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        var SELECTOR_HEIGHT_ADJUST = 0.1;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof dataviz.DateCategoryAxis;\n                this.initOptions();\n                this.visible = this.options.visible && chartElement.offsetHeight;\n                if (this.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            onPane: function (pane) {\n                return this.categoryAxis.pane === pane;\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height,\n                    direction: 'ltr'\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                if (this.options.mousewheel !== false) {\n                    this._mousewheelHandler = this._mousewheel.bind(this);\n                    var obj;\n                    bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                }\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    stopPropagation: true,\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var box = categoryAxis.pane.chartsBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: box.width(),\n                    height: box.height() + SELECTOR_HEIGHT_ADJUST,\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: box.x1 + paddingLeft,\n                        top: box.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    if (this._mousewheelHandler) {\n                        var obj;\n                        unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                        this._mousewheelHandler = null;\n                    }\n                    this.chartElement.removeChild(this.wrapper);\n                    this.wrapper = null;\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var target = state.moveTarget;\n                var reverse = categoryAxis.options.reverse;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (categoryAxis.categoriesCount() - 1);\n                var offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n                if (!target) {\n                    return;\n                }\n                var leftHandle = hasClasses(target, 'k-left-handle');\n                var rightHandle = hasClasses(target, 'k-right-handle');\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (leftHandle && !reverse || rightHandle && reverse) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (leftHandle && reverse || rightHandle && !reverse) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var value = index;\n                if (this._dateAxis) {\n                    value = this.categoryAxis.categoryAt(index);\n                    if (value > this.options.max) {\n                        value = this.options.max;\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var reverse = this.categoryAxis.options.reverse;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var left = reverse ? to : from;\n                var right = reverse ? from : to;\n                var edge = 'x' + (reverse ? 2 : 1);\n                var box = this._slot(left);\n                var leftMaskWidth = round(box[edge] - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(right);\n                var rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                        series: this.plotArea.series\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({ reverse: !vertical && this.chartService.rtl }, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                updateAxisOptions$1(this.options, index, vertical, options);\n                updateAxisOptions$1(this.originalOptions, index, vertical, options);\n            }\n        });\n        function updateAxisOptions$1(targetOptions, axisIndex, vertical, options) {\n            var axisOptions = [].concat(vertical ? targetOptions.yAxis : targetOptions.xAxis)[axisIndex];\n            deepExtend(axisOptions, options);\n        }\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                var labelTemplate = getTemplate(labels);\n                var pointData = this.pointData();\n                if (labelTemplate) {\n                    labelText = labelTemplate(pointData);\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && (labelText || labelText === 0)) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            var brightnessValue = new Color(this.options.color).percBrightness();\n                            if (brightnessValue > 180) {\n                                labels.color = BLACK;\n                            } else {\n                                labels.color = WHITE;\n                            }\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }), pointData);\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    series: this.series,\n                    percentage: this.percentage\n                };\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? getTemplate(labelsOptions) : getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n                    var text = options.category;\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        this.legendItems.push({\n                            active: pointVisible,\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var ref$1 = bindSegments(currentSeries);\n                    var total = ref$1.total;\n                    var points = ref$1.points;\n                    var count = ref$1.count;\n                    var anglePerValue = 360 / total;\n                    var constantAngle = void 0;\n                    if (!isFinite(anglePerValue)) {\n                        constantAngle = 360 / count;\n                    }\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < points.length; i++) {\n                        var pointData = points[i];\n                        if (!pointData) {\n                            continue;\n                        }\n                        var fields = pointData.fields;\n                        var value = pointData.value;\n                        var visible = pointData.visible;\n                        var angle = value !== 0 ? constantAngle || value * anglePerValue : 0;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        callback(pointData.valueFields.value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: defined(fields.category) ? fields.category : '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? value / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                this.targetBox = targetBox;\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                if (dataviz.find(this.options.series, function (options) {\n                        return options.autoFit;\n                    })) {\n                    var targetBox = this.targetBox;\n                    var pieCenter = this.box.center();\n                    var bbox = this.visual.bbox();\n                    if (!bbox) {\n                        return;\n                    }\n                    var bboxBottom = bbox.bottomRight();\n                    var scale = Math.min((pieCenter.y - targetBox.y1) / (pieCenter.y - bbox.origin.y), (targetBox.y2 - pieCenter.y) / (bboxBottom.y - pieCenter.y), (pieCenter.x - targetBox.x1) / (pieCenter.x - bbox.origin.x), (targetBox.x2 - pieCenter.x) / (bboxBottom.x - pieCenter.x));\n                    if (scale < 1) {\n                        this.visual.transform(transform().scale(scale, scale, [\n                            pieCenter.x,\n                            pieCenter.y\n                        ]));\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            },\n            stackRoot: function () {\n                return this;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        PieChart.prototype.isStackRoot = true;\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var paddingBox = box.clone().unpad(padding);\n                var axisBox = paddingBox.clone();\n                axisBox.y2 = axisBox.y1 + Math.min(axisBox.width(), axisBox.height());\n                axisBox.align(paddingBox, Y, CENTER);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            },\n            detachLabels: function () {\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new CurveProcessor(false);\n                    var linePoints = this.points();\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                var centerSegment = new geometry.Segment([\n                    center.x,\n                    center.y\n                ]);\n                fillPath.segments.unshift(centerSegment);\n                fillPath.segments.push(centerSegment);\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        function groupBySeriesIx(segments) {\n            var seriesSegments = [];\n            for (var idx = 0; idx < segments.length; idx++) {\n                var segment = segments[idx];\n                seriesSegments[segment.seriesIx] = seriesSegments[segment.seriesIx] || [];\n                seriesSegments[segment.seriesIx].push(segment);\n            }\n            return seriesSegments;\n        }\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            renderSegments: function () {\n                LineChart.fn.renderSegments.call(this);\n                if (this._segments && this._segments.length > 1) {\n                    var seriesSegments = groupBySeriesIx(this._segments);\n                    for (var idx = 0; idx < seriesSegments.length; idx++) {\n                        var segments = seriesSegments[idx];\n                        if (segments && segments.length > 1) {\n                            var firstPoint = segments[0].linePoints[0];\n                            var lastSegment = last(segments);\n                            var lastPoint = last(lastSegment.linePoints);\n                            var isFirstDataPoint = firstPoint.categoryIx === 0;\n                            var isLastDataPoint = lastPoint.categoryIx === lastPoint.categoriesCount - 1;\n                            if (isFirstDataPoint && isLastDataPoint) {\n                                last(segments).linePoints.push(firstPoint);\n                            }\n                        }\n                    }\n                }\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                var missingValues = this.seriesMissingValues(currentSeries);\n                if (linePoints.length === currentSeries.data.length || missingValues === INTERPOLATE) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, {\n            clip: false,\n            limitPoints: false\n        });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                var segment;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    stackPoints = prevSegment.linePoints.slice(0);\n                    previousSegment = prevSegment;\n                }\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                    segment.options.closed = true;\n                } else {\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                this.forEach(children, function (child) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (child.sector) {\n                        slotSector.radius = child.sector.radius;\n                    }\n                    child.reflow(slotSector);\n                    child.sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                });\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            limitPoints: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries,\n            seriesSourcePoints: CategoricalPlotArea.prototype.seriesSourcePoints\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var ref$1 = bindSegments(series);\n                var total = ref$1.total;\n                var points = ref$1.points;\n                for (var i = 0; i < points.length; i++) {\n                    var pointData = points[i];\n                    if (!pointData) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: pointData.value / total\n                    }, fields, { visible: pointData.visible });\n                    var value = pointData.valueFields.value;\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var data = {\n                        dataItem: dataItem,\n                        value: value,\n                        percentage: fields.percentage,\n                        category: fields.category,\n                        series: series\n                    };\n                    if (labelTemplate) {\n                        text = labelTemplate(data);\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        var brightnessValue = new Color(series.color).percBrightness();\n                        if (brightnessValue > 180) {\n                            labels.color = BLACK;\n                        } else {\n                            labels.color = WHITE;\n                        }\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels), data);\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSELEAVE = 'mouseleave';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initHandlers();\n                this._initSurface();\n                this.bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    this$1.fontLoaded = true;\n                    if (!this$1._destroyed) {\n                        this$1.trigger('init');\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this.applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this.applySeriesColors();\n            },\n            getSize: function () {\n                var chartArea = this.options.chartArea || {};\n                var width = chartArea.width ? parseInt(chartArea.width, 10) : Math.floor(this.element.offsetWidth);\n                var height = chartArea.height ? parseInt(chartArea.height, 10) : Math.floor(this.element.offsetHeight);\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                var hasSize = size.width > 0 || size.height > 0;\n                if (force || hasSize && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                } else if (hasSize && this._selections && dataviz.find(this._selections, function (s) {\n                        return !s.visible;\n                    })) {\n                    this._destroySelections();\n                    this._setupSelection();\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this.applyDefaults(this.options);\n                this.applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                return findAxisByName(name, this._plotArea.axes);\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(panes[idx]);\n                }\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this.togglePointsHighlight(show, points);\n                }\n            },\n            togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea || {};\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    this._destroySurface();\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                    this.surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                    this.surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._size = {\n                    width: model.options.width,\n                    height: model.options.height\n                };\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                triggerPaneRender(this._plotArea.panes);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (exportOptions) {\n                var visual;\n                if (exportOptions && (exportOptions.width || exportOptions.height || exportOptions.options)) {\n                    var currentOptions = this.options;\n                    var options = deepExtend({}, exportOptions.options, {\n                        chartArea: {\n                            width: exportOptions.width,\n                            height: exportOptions.height\n                        }\n                    });\n                    clearMissingValues(this._originalOptions, options);\n                    this.options = deepExtend({}, this._originalOptions, options);\n                    this._initTheme(this.options, this._theme);\n                    this.bindCategories();\n                    var model = this._getModel();\n                    model.renderVisual();\n                    triggerPaneRender(model._plotArea.panes);\n                    visual = model.visual;\n                    this.options = currentOptions;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _toggleDragZoomEvents: function () {\n                var pannable = this.options.pannable;\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                var mousewheel = (zoomable || {}).mousewheel;\n                var allowDrag = !pannable && (zoomable === false || selection === false) && !this.requiresHandlers([\n                    DRAG_START,\n                    DRAG,\n                    DRAG_END\n                ]);\n                var allowZoom = (zoomable === false || mousewheel === false) && !this.requiresHandlers([\n                    ZOOM_START,\n                    ZOOM,\n                    ZOOM_END\n                ]);\n                var element = this.element;\n                if (this._dragZoomEnabled && allowDrag && allowZoom) {\n                    element.style.touchAction = this._touchAction || '';\n                    this._dragZoomEnabled = false;\n                } else if (!this._dragZoomEnabled && !(allowDrag && allowZoom)) {\n                    element.style.touchAction = 'none';\n                    this._dragZoomEnabled = true;\n                }\n                this._toggleDomEvents(!allowDrag, !allowZoom);\n            },\n            _toggleDomEvents: function (drag, zoom) {\n                var domEvents = this.domEvents;\n                if (!domEvents) {\n                    return;\n                }\n                if (domEvents.toggleDrag) {\n                    domEvents.toggleDrag(drag);\n                }\n                if (domEvents.toggleZoom) {\n                    domEvents.toggleZoom(zoom);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = this._createSharedTooltip(tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _createSharedTooltip: function (options) {\n                return new SharedTooltip(this._plotArea, options);\n            },\n            applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend && options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var options = this.options;\n                var size = this.getSize();\n                return deepExtend({\n                    transitions: options.transitions,\n                    width: size.width || datavizConstants.DEFAULT_WIDTH,\n                    height: size.height || datavizConstants.DEFAULT_HEIGHT\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var range = axis.range();\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: range.min,\n                            max: range.max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._mouseleaveHandler = this._mouseleave.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var element = this.element;\n                this._touchAction = element.style.touchAction;\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSELEAVE] = this._mouseleaveHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n                this._toggleDragZoomEvents();\n            },\n            _mouseleave: function (e) {\n                if (this._hoveredPoint) {\n                    this._hoveredPoint.out(this, e);\n                    this._hoveredPoint = null;\n                }\n                if (this._plotArea.hovered) {\n                    this.trigger(PLOT_AREA_LEAVE);\n                    this._plotArea.hovered = false;\n                }\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopChartHandlers(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopChartHandlers(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopChartHandlers(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopChartHandlers(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                    this.chartService.panning = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopChartHandlers(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopChartHandlers(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this.chartService.panning = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopChartHandlers: function (e) {\n                var selections = this._selections || [];\n                if (!selections.length) {\n                    return false;\n                }\n                var coords = this._eventCoordinates(e);\n                var pane = this._plotArea.paneByPoint(coords);\n                if (pane) {\n                    for (var idx = 0; idx < selections.length; idx++) {\n                        if (selections[idx].onPane(pane)) {\n                            return true;\n                        }\n                    }\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (this._stopChartHandlers(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                        if (chartElement && chartElement.aliasFor) {\n                            chartElement = chartElement.aliasFor();\n                        }\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                var inverseTransform = dataviz.elementScale(element).invert();\n                var point = new GeometryPoint(clientX - offset.left - padding.left, clientY - offset.top - padding.top).transform(inverseTransform);\n                return new Point(point.x, point.y);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                var sharedTooltip = this._sharedTooltip();\n                if (!this._startHover(drawingElement, e) && !sharedTooltip) {\n                    this._unsetActivePoint();\n                }\n                if (sharedTooltip) {\n                    this._trackSharedTooltip(this._eventCoordinates(e), e, true);\n                }\n                this._propagateClick(element, e);\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                if (this._suppressHover) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return (element.hover || element.over) && !(element instanceof PlotAreaBase);\n                });\n                var activePoint = this._activePoint;\n                var hoveredPoint = this._hoveredPoint;\n                if (hoveredPoint && hoveredPoint !== point) {\n                    hoveredPoint.out(this, e);\n                    this._hoveredPoint = null;\n                }\n                if (point && hoveredPoint !== point && point.over) {\n                    this._hoveredPoint = point;\n                    point.over(this, e);\n                }\n                if (point && activePoint !== point && point.hover) {\n                    this._activePoint = point;\n                    if (!this._sharedTooltip() && !point.hover(this, e)) {\n                        var tooltipOptions = deepExtend({}, this.options.tooltip, point.options.tooltip);\n                        if (tooltipOptions.visible) {\n                            this._tooltip.show(point);\n                        }\n                        this._highlight.show(point);\n                    }\n                }\n                return point;\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking && !this._mouseMoveTrackHandler && !this._sharedTooltip()) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            this._activePoint = seriesPoint;\n                            if (!seriesPoint.hover(this, e)) {\n                                var tooltipOptions = deepExtend({}, options.tooltip, seriesPoint.options.tooltip);\n                                if (tooltipOptions.visible) {\n                                    tooltip.show(seriesPoint);\n                                }\n                                highlight.show(seriesPoint);\n                            }\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                    this._mouseMoveTrackHandler = null;\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                var plotArea = this._plotArea;\n                this._trackCrosshairs(coords);\n                if (plotArea.hover) {\n                    var overPlotArea = plotArea.backgroundContainsPoint(coords);\n                    if (overPlotArea) {\n                        plotArea.hovered = true;\n                        this._plotArea.hover(this, e);\n                    } else if (plotArea.hovered && !overPlotArea) {\n                        this.trigger(PLOT_AREA_LEAVE);\n                        plotArea.hovered = false;\n                    }\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e, toggle) {\n                if (this._suppressHover) {\n                    return;\n                }\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.backgroundContainsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx || !this._sharedHighlight && toggle) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                            this._sharedHighlight = true;\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    } else if (toggle && this._sharedHighlight) {\n                        highlight.hide();\n                        tooltip.hide();\n                        this._sharedHighlight = false;\n                    }\n                } else if (this._sharedHighlight) {\n                    highlight.hide();\n                    tooltip.hide();\n                    this._tooltipCategoryIx = null;\n                    this._sharedHighlight = false;\n                }\n            },\n            hideElements: function (options) {\n                var plotArea = this._plotArea;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                this._unsetActivePoint(options);\n            },\n            _unsetActivePoint: function (options) {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                this._hoveredPoint = null;\n                if (tooltip && !(options && options.keepTooltipOpen)) {\n                    tooltip.hide();\n                }\n                this._tooltipCategoryIx = null;\n                this._sharedHighlight = false;\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1.bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = new dataviz.HashMap();\n                var items = [];\n                var bindable = false;\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    var bind = s.categoryField && onAxis;\n                    bindable = bind || bindable;\n                    if (bind && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories.get(category)) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories.set(category, true);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                } else if (bindable) {\n                    axis.categories = [];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions !== false) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this._redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([\n                    PLOT_AREA_HOVER,\n                    PLOT_AREA_LEAVE\n                ]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n                this._toggleDragZoomEvents();\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this.bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n            },\n            setDirection: function (rtl) {\n                this.chartService.rtl = Boolean(rtl);\n                if (this.surface && this.surface.type === 'svg') {\n                    this._destroySurface();\n                }\n            },\n            setIntlService: function (intl) {\n                this.chartService.intl = intl;\n            },\n            noTransitionsRedraw: function () {\n                this._noTransitionsRedraw();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj[MOUSELEAVE] = this._mouseleaveHandler, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                if (this._mouseMoveTrackHandler) {\n                    var obj$1;\n                    unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                }\n                this._destroyView();\n                this._destroySurface();\n                this._clearRedrawTimeout();\n            },\n            _destroySurface: function () {\n                var surface = this.surface;\n                if (surface) {\n                    surface.unbind('mouseenter', this._surfaceMouseenterHandler);\n                    surface.unbind('mouseleave', this._surfaceMouseleaveHandler);\n                    surface.destroy();\n                    this.surface = null;\n                }\n            },\n            _destroySelections: function () {\n                var selections = this._selections;\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n            },\n            _destroyView: function () {\n                var model = this._model;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                this._unsetActivePoint();\n                this._destroySelections();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n                series[i].data = series[i].data || [];\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        var DATA_FIELDS = [\n            'data',\n            'categories'\n        ];\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                if (!inArray(field, DATA_FIELDS) && options.hasOwnProperty(field)) {\n                    var fieldValue = options[field];\n                    var originalValue = originalOptions[field];\n                    if (defined(originalValue)) {\n                        var nullValue = fieldValue === null;\n                        if (nullValue || !defined(fieldValue)) {\n                            delete originalOptions[field];\n                            if (nullValue) {\n                                delete options[field];\n                            }\n                        } else if (originalValue && isObject(fieldValue)) {\n                            if (isObject(originalValue)) {\n                                clearMissingValues(originalValue, fieldValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        function triggerPaneRender(panes) {\n            for (var idx = 0; idx < panes.length; idx++) {\n                panes[idx].notifyRender();\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            RangeAreaPoint: RangeAreaPoint,\n            RangeAreaChart: RangeAreaChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPane: ChartPane,\n            ChartPlotArea: ChartPlotArea,\n            findAxisByName: findAxisByName,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: appendIfNotNull,\n            areNumbers: areNumbers,\n            bindSegments: bindSegments,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            singleItemOrArray: singleItemOrArray,\n            createOutOfRangePoints: createOutOfRangePoints\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var LEGEND_ITEM_LEAVE = constants.LEGEND_ITEM_LEAVE;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var SERIES_OVER = constants.SERIES_OVER;\n        var SERIES_LEAVE = constants.SERIES_LEAVE;\n        var PANE_RENDER = constants.PANE_RENDER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var PLOT_AREA_LEAVE = constants.PLOT_AREA_LEAVE;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var NOTE_LEAVE = constants.NOTE_LEAVE;\n        var DOCUMENT_ELEMENT = $(document.documentElement);\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var MOUSEDOWN = 'down';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        var RTL = 'rtl';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender',\n                init: '_onInit'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this._seriesVisibility = new SeriesVisibilityState();\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                SERIES_OVER,\n                SERIES_LEAVE,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                LEGEND_ITEM_LEAVE,\n                PANE_RENDER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                PLOT_AREA_LEAVE,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                NOTE_LEAVE,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                axisDefaults: {},\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance.applyDefaults(chart.options);\n                instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._seriesVisibility.setOptions(this.options);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            exportVisual: function (options) {\n                var instance = this._instance;\n                if (!instance) {\n                    return;\n                }\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = instance.options.chartArea;\n                    var originalChartArea = instance._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = instance._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    triggerPaneRender(model._plotArea.panes);\n                    visual = model.visual;\n                } else {\n                    visual = instance.exportVisual();\n                }\n                return visual;\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements({ keepTooltipOpen: !tooltip.options.autoHide });\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (themeName && dataviz.SASS_THEMES.indexOf(themeName.toLowerCase()) !== -1) {\n                    return dataviz.autoTheme().chart;\n                }\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n                this._seriesVisibility.setOptions(this.options);\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this,\n                    rtl: this._isRtl()\n                });\n            },\n            _onInit: function (e) {\n                this._instance = e.sender;\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide(e);\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var point = currentSeries.data[pointIndex];\n                    if (point && defined(point.visible)) {\n                        point.visible = !point.visible;\n                    } else {\n                        var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                        var visible = pointVisibility[pointIndex];\n                        pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                    }\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._seriesVisibility.save(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, extend({}, this.options.tooltip, { rtl: this._isRtl() }));\n            },\n            _tooltipleave: function () {\n                if (this._instance) {\n                    this._instance.hideElements();\n                }\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], seriesVisibility = this._seriesVisibility, currentSeries, groupedSeries;\n                seriesVisibility.read();\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        groupedSeries = groupSeries(currentSeries, data);\n                        processedSeries = processedSeries.concat(groupedSeries);\n                        seriesVisibility.applyByGroup(groupedSeries, e);\n                    } else {\n                        currentSeries = extend({}, currentSeries);\n                        processedSeries.push(currentSeries);\n                        seriesVisibility.applyByIndex(currentSeries, e);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                if (this._instance && this._instance.fontLoaded) {\n                    this._redraw();\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance.bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _isRtl: function () {\n                return kendo.support.isRtl(this.element) && this.element.css('direction') === RTL;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var SeriesVisibilityState = Class.extend({\n            init: function () {\n                this.groups = {};\n                this.index = {};\n                this.options = {};\n            },\n            applyByGroup: function (series, e) {\n                if (e && e.action || this.options.persistSeriesVisibility) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (this.groups[series[idx]._groupValue] === false) {\n                            series[idx].visible = false;\n                        }\n                    }\n                } else {\n                    this.groups = {};\n                }\n            },\n            applyByIndex: function (series, e) {\n                if (e && e.action || this.options.persistSeriesVisibility) {\n                    if (this.index[series.index] === false) {\n                        series.visible = false;\n                    }\n                } else {\n                    this.index = {};\n                }\n            },\n            save: function (series) {\n                if (!series) {\n                    return;\n                }\n                if (this.options.persistSeriesVisibility) {\n                    this.options.series[series.index].visible = series.visible;\n                } else {\n                    this.saveState(series);\n                }\n            },\n            setOptions: function (options) {\n                this.options = options;\n                this.groups = {};\n                this.index = {};\n            },\n            read: function () {\n                var options = this.options;\n                if (options.persistSeriesVisibility) {\n                    var series = options.series;\n                    for (var idx = 0; idx < series.length; idx++) {\n                        this.saveState(series[idx]);\n                    }\n                }\n            },\n            saveState: function (series) {\n                if (defined(series._groupValue)) {\n                    this.groups[series._groupValue] = series.visible;\n                } else {\n                    this.index[series.index] = series.visible;\n                }\n            }\n        });\n        var geom = kendo.geometry;\n        function normalizeStyle(style) {\n            for (var field in style) {\n                if (style[field] === undefined) {\n                    style[field] = '';\n                }\n            }\n            return style;\n        }\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip #if (!d.autoHide) {# k-tooltip-closable#}# k-chart-tooltip#= d.rtl ? \" k-rtl\" : \"\"#\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '<div class=\"k-tooltip-content\"></div>' + '#if (!d.autoHide) {# <div class=\"k-tooltip-button\"><a href=\"\\\\#\" class=\"k-icon k-i-close\" title=\"Close\"></a></div> #}#' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n                tooltip.downEvent = kendo.applyEventMap(MOUSEDOWN, kendo.guid());\n                tooltip._closeTooltipHandler = proxy(tooltip._closeTooltip, tooltip);\n            },\n            destroy: function () {\n                var tooltip = this;\n                this._clearShowTimeout();\n                DOCUMENT_ELEMENT.off(tooltip.downEvent, tooltip._closeTooltipHandler);\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'#= colspan #\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(colorMarker) { # ' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# } #' + '# if(nameColumn) { # ' + '<td> #if (point.series.name) {# #: point.series.name #: #} else {# &nbsp; #}#</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}',\n                autoHide: true\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                var tooltip = this;\n                this.anchor = e.anchor;\n                this.element.css(normalizeStyle(e.style));\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.find('.k-tooltip-content').html(content);\n                if (!tooltip.options.autoHide) {\n                    tooltip.element.off('click' + NS).on('click' + NS, '.k-tooltip-button', tooltip._closeTooltipHandler);\n                    DOCUMENT_ELEMENT.off(tooltip.downEvent, tooltip._closeTooltipHandler).on(tooltip.downEvent, tooltip._closeTooltipHandler);\n                }\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                    DOCUMENT_ELEMENT.off(tooltip.downEvent, tooltip._closeTooltipHandler);\n                }\n            },\n            _closeTooltip: function (e) {\n                var target = $(e.target);\n                if (!target.is('.k-chart-tooltip, .k-tooltip-content')) {\n                    e.preventDefault();\n                    this.chartElement.data('kendoChart')._instance.hideElements();\n                    this.hide();\n                }\n            },\n            _sharedContent: function (e) {\n                var points = e.points;\n                var nameColumn = dataviz.grep(points, function (point) {\n                    return defined(point.series.name);\n                }).length;\n                var colorMarker = e.series.length > 1;\n                var colspan = 1;\n                if (nameColumn) {\n                    colspan++;\n                }\n                if (colorMarker) {\n                    colspan++;\n                }\n                var template = kendo.template(this.options.sharedTemplate);\n                var content = template({\n                    points: points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: this._pointContent,\n                    colorMarker: colorMarker,\n                    nameColumn: nameColumn,\n                    colspan: colspan\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance.bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance.togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._seriesVisibility.save(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        function triggerPaneRender(panes) {\n            for (var idx = 0; idx < panes.length; idx++) {\n                panes[idx].notifyRender();\n            }\n        }\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}