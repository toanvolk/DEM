{"version":3,"sources":["kendo.gantt.list.js"],"names":["f","define","$","extend","map","proxy","isFunction","ui","kendo","TreeList","outerHeight","_outerHeight","activeElement","_activeElement","keys","mobileOS","support","DATATYPE","attr","BINDING","FORMAT","STRING","NS","DOUBLE_CLICK","FOCUSIN","FOCUSOUT","KEYDOWN","KEYUP","MOUSE_DOWN","BEFORE_EDIT","EDIT","SAVE","CANCEL","RENDER","DOT","defaultDateFormat","getCulture","calendar","patterns","d","titleFromField","title","start","end","percentComplete","parentId","id","orderId","SIZE_CALCULATION_TEMPLATE","listStyles","editCell","iconCollapse","iconExpand","GanttList","init","element","options","this","columns","length","push","fn","call","_setWidth","name","autoBind","sortable","selectable","navigatable","editable","move","mode","resizable","destroy","insertAfter","nodeData","referenceNode","taskInfo","trigger","task","updateInfo","insertBefore","_attachCellEditingEventHandlers","that","_isIncellEditable","update","_startEditHandler","e","td","currentTarget","column","_columnFromElement","_editCell","_modelFromElement","content","on","_focusInEditableHandler","_focusoutCellHandler","_keydownHandler","_keyupHandler","touch","kendoTouch","filter","touchstart","_mouseDownHandler","doubletap","initialTouch","_openEditorHandler","data","_blurActiveElement","nodeName","toLowerCase","blur","_closeCellTimeouted","target","editor","cell","contains","closest","closeCell","_columns","_hasExpandable","forEach","item","expandable","_eachColumn","_columnEditor","field","required","_extractFormat","format","container","model","fields","validation","dateCompare","message","hide","appendTo","prependTo","kendoDateTimePicker","tr","parent","idx","children","index","resourcesField","isSortable","formatResources","i","value","get","formatedValue","join","hasNestedColumns","indexOf","template","editedCell","modelCopy","dataSource","_createNewModel","toJSON","_restorePageSizeAfterAddChild","_edit","_cancelEditor","_render","editedColumn","editedColumnIndex","table","add","lockedTable","find","first","_createIncellEditor","change","values","preventDefault","_current","clearTimeout","_closeCellTimeout","setTimeout","keyCode","ENTER","key","ESC","row","getByUid","hasClass","isLockedCell","multiple","has","tbody","is","addClass","rowHeight","_rowHeight","tasks","height","append","remove","css","_setData","listWidth","plugin","window","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.gantt.list.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.gantt.list', ['kendo.treelist'], f);\n}(function () {\n    var __meta__ = {\n        id: 'gantt.list',\n        name: 'Gantt List',\n        category: 'web',\n        description: 'The Gantt List',\n        depends: ['treelist'],\n        hidden: true\n    };\n    (function ($) {\n        var extend = $.extend, map = $.map, proxy = $.proxy, isFunction = $.isFunction, ui = kendo.ui, TreeList = ui.TreeList, outerHeight = kendo._outerHeight, activeElement = kendo._activeElement, keys = kendo.keys, mobileOS = kendo.support.mobileOS, DATATYPE = kendo.attr('type'), BINDING = kendo.attr('bind'), FORMAT = kendo.attr('format'), STRING = 'string', NS = '.kendoGanttList', DOUBLE_CLICK = 'dblclick', FOCUSIN = 'focusin', FOCUSOUT = 'focusout', KEYDOWN = 'keydown', KEYUP = 'keyup', MOUSE_DOWN = 'mousedown', BEFORE_EDIT = 'beforeEdit', EDIT = 'edit', SAVE = 'save', CANCEL = 'cancel', RENDER = 'render', DOT = '.', defaultDateFormat = '{0:' + kendo.getCulture().calendar.patterns.d + '}', titleFromField = {\n                'title': 'Title',\n                'start': 'Start Time',\n                'end': 'End Time',\n                'percentComplete': '% Done',\n                'parentId': 'Predecessor ID',\n                'id': 'ID',\n                'orderId': 'Order ID'\n            }, SIZE_CALCULATION_TEMPLATE = '<table style=\\'visibility: hidden;\\'>' + '<tbody>' + '<tr style=\\'height:{0}\\'>' + '<td>&nbsp;</td>' + '</tr>' + '</tbody>' + '</table>', listStyles = {\n                editCell: 'k-edit-cell',\n                iconCollapse: 'k-i-collapse',\n                iconExpand: 'k-i-expand'\n            };\n        var GanttList = ui.GanttList = TreeList.extend({\n            init: function (element, options) {\n                if (this.options.columns.length === 0) {\n                    this.options.columns.push('title');\n                }\n                TreeList.fn.init.call(this, element, options);\n                this._setWidth();\n            },\n            options: {\n                name: 'GanttList',\n                autoBind: false,\n                sortable: true,\n                selectable: true,\n                navigatable: false,\n                editable: {\n                    move: true,\n                    mode: 'incell'\n                },\n                resizable: false\n            },\n            destroy: function () {\n                TreeList.fn.destroy.call(this);\n                kendo.destroy(this.element);\n            },\n            insertAfter: function (nodeData, referenceNode) {\n                var orderId = referenceNode.orderId;\n                var taskInfo = { parentId: referenceNode.parentId };\n                if (referenceNode.parentId === nodeData.parentId && referenceNode.orderId > nodeData.orderId) {\n                    taskInfo.orderId = orderId;\n                } else {\n                    taskInfo.orderId = orderId + 1;\n                }\n                this.trigger('reorder', {\n                    task: nodeData,\n                    updateInfo: taskInfo\n                });\n            },\n            insertBefore: function (nodeData, referenceNode) {\n                var orderId = referenceNode.orderId;\n                var taskInfo = { parentId: referenceNode.parentId };\n                if (referenceNode.parentId === nodeData.parentId && referenceNode.orderId > nodeData.orderId) {\n                    taskInfo.orderId = orderId - 1;\n                } else {\n                    taskInfo.orderId = orderId;\n                }\n                this.trigger('reorder', {\n                    task: nodeData,\n                    updateInfo: taskInfo\n                });\n            },\n            _attachCellEditingEventHandlers: function () {\n                var that = this, editable = that.options.editable;\n                if (that._isIncellEditable() && editable.update !== false) {\n                    that._startEditHandler = function (e) {\n                        var td = e.currentTarget ? $(e.currentTarget) : e;\n                        var column = that._columnFromElement(td);\n                        if (that.editable) {\n                            return;\n                        }\n                        if (column && column.editable()) {\n                            that._editCell(td, column, that._modelFromElement(td));\n                        }\n                    };\n                    that.content.on(FOCUSIN + NS, proxy(that._focusInEditableHandler, that)).on(FOCUSOUT + NS, proxy(that._focusoutCellHandler, that)).on(KEYDOWN + NS, 'tr:not(.k-grouping-row) > td', proxy(that._keydownHandler, that)).on(KEYUP + NS, 'tr:not(.k-grouping-row) > td', proxy(that._keyupHandler, that));\n                    if (!mobileOS) {\n                        that.content.on(MOUSE_DOWN + NS, 'tr:not(.k-grouping-row) > td', proxy(that._mouseDownHandler, that)).on(DOUBLE_CLICK + NS, 'tr:not(.k-grouping-row) > td', proxy(that._openEditorHandler, that));\n                    } else {\n                        that.touch = that.content.kendoTouch({\n                            filter: 'td',\n                            touchstart: function (e) {\n                                that._mouseDownHandler(e.touch);\n                            },\n                            doubletap: function (e) {\n                                if (!$(e.touch.initialTouch)) {\n                                    that._openEditorHandler(e.touch);\n                                }\n                            }\n                        }).data('kendoTouch');\n                    }\n                }\n            },\n            _blurActiveElement: function () {\n                var activeElement = kendo._activeElement();\n                if (activeElement && activeElement.nodeName.toLowerCase() !== 'body') {\n                    $(activeElement).blur();\n                }\n            },\n            _closeCellTimeouted: function () {\n                var that = this, target = activeElement(), editor = that.editor || {}, cell = editor.element;\n                if (cell && cell[0] && target && !$.contains(cell[0], target) && cell[0] !== target && !$(target).closest('.k-animation-container').length) {\n                    if (editor.end()) {\n                        that.closeCell();\n                    }\n                }\n            },\n            _columns: function () {\n                var that = this, columns = this.options.columns;\n                that._hasExpandable = false;\n                columns.forEach(function (item) {\n                    if (item.expandable) {\n                        that._hasExpandable = true;\n                    }\n                });\n                that.columns = that.options.columns = map(columns, proxy(that._eachColumn, that));\n                TreeList.fn._columns.call(that);\n            },\n            _columnEditor: function (column) {\n                var attr = {\n                    'name': column.field,\n                    'required': true\n                };\n                attr[BINDING] = 'value:' + column.field;\n                attr[DATATYPE] = 'date';\n                attr[FORMAT] = kendo._extractFormat(column.format);\n                return function (container, options) {\n                    var model = options.model, field = model.fields[column.field] || model[column.field], validation = field.validation;\n                    if (validation && validation.dateCompare && isFunction(validation.dateCompare) && validation.message) {\n                        $('<span ' + kendo.attr('for') + '=\"' + column.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n                        attr[kendo.attr('dateCompare-msg')] = validation.message;\n                    }\n                    $('<input type=\"text\"/>').attr(attr).prependTo(container).kendoDateTimePicker({ format: options.format });\n                };\n            },\n            _columnFromElement: function (element) {\n                var td = element.closest('td'), tr = td.parent(), idx = tr.children().index(td);\n                return this.columns[idx];\n            },\n            _eachColumn: function (column) {\n                var that = this, resourcesField = that.options.resourcesField, isSortable = this.options.sortable;\n                var model = function () {\n                    this.field = '';\n                    this.title = '';\n                    this.editable = function () {\n                        return false;\n                    };\n                    this.sortable = false;\n                };\n                var formatResources = function (task) {\n                    var value = task.get(resourcesField) || [], formatedValue = [];\n                    for (var i = 0; i < value.length; i++) {\n                        formatedValue.push(kendo.format('{0} [{1}]', value[i].get('name'), value[i].get('formatedValue')));\n                    }\n                    return formatedValue.join(', ');\n                };\n                if (column.columns) {\n                    that.hasNestedColumns = true;\n                    column.columns = map(column.columns, proxy(this._eachColumn, this));\n                }\n                if (typeof column === STRING) {\n                    column = {\n                        field: column,\n                        title: titleFromField[column]\n                    };\n                }\n                if (column.editable === true) {\n                    column.editable = function () {\n                        return true;\n                    };\n                } else {\n                    column.editable = function () {\n                        return false;\n                    };\n                }\n                if (column.field === 'start' || column.field === 'end') {\n                    column.format = kendo.getCulture().calendar.patterns[column.format] || column.format || defaultDateFormat;\n                    if (!column.editor) {\n                        if (column.format === defaultDateFormat || column.format.toLowerCase().indexOf('h') > -1) {\n                            column.editor = that._columnEditor(column);\n                        }\n                    }\n                }\n                if (column.field === resourcesField) {\n                    column.sortable = false;\n                    column.template = formatResources;\n                }\n                if (!that._hasExpandable && column.field === 'title') {\n                    column.expandable = true;\n                }\n                if (isSortable && !column.sortable) {\n                    column.sortable = false;\n                }\n                return extend(new model(), column);\n            },\n            _editCell: function (cell, column, model) {\n                var that = this, resourcesField = that.options.resourcesField, modelCopy = that.dataSource._createNewModel(model.toJSON()), editedCell;\n                if (column.field === resourcesField) {\n                    column.editor(cell, modelCopy);\n                    return;\n                } else {\n                    if (that.trigger(BEFORE_EDIT, {\n                            model: model,\n                            container: cell\n                        })) {\n                        that.dataSource._restorePageSizeAfterAddChild();\n                        return;\n                    }\n                    that.closeCell();\n                    model._edit = true;\n                    that._cancelEditor();\n                    that._render({\n                        editedColumn: column,\n                        editedColumnIndex: cell.index()\n                    });\n                    editedCell = that.table.add(that.lockedTable).find(DOT + listStyles.editCell).first();\n                    that.editor = that._createIncellEditor(editedCell, {\n                        columns: [column],\n                        model: model,\n                        change: function (e) {\n                            if (that.trigger(SAVE, {\n                                    values: e.values,\n                                    container: cell,\n                                    model: model\n                                })) {\n                                e.preventDefault();\n                            }\n                        }\n                    });\n                    that._current = editedCell;\n                    that.trigger(EDIT, {\n                        container: cell,\n                        model: model\n                    });\n                }\n            },\n            _focusInEditableHandler: function (e) {\n                var that = this, target = e.target;\n                if (!$.contains(target, activeElement())) {\n                    clearTimeout(that._closeCellTimeout);\n                    that._closeCellTimeout = null;\n                }\n            },\n            _focusoutCellHandler: function (e) {\n                var that = this;\n                that._closeCellTimeout = setTimeout(function () {\n                    that._closeCellTimeouted(e);\n                }, 1);\n            },\n            _keydownHandler: function (e) {\n                if (e.keyCode === keys.ENTER) {\n                    e.preventDefault();\n                }\n            },\n            _keyupHandler: function (e) {\n                var that = this, key = e.keyCode, cell, model;\n                switch (key) {\n                case keys.ENTER:\n                    that._blurActiveElement();\n                    that._closeCellTimeouted(e);\n                    break;\n                case keys.ESC:\n                    if (that.editor) {\n                        cell = $(e.target);\n                        model = that._modelFromElement(cell);\n                        that.trigger(CANCEL, {\n                            model: model,\n                            cell: cell\n                        });\n                    }\n                    break;\n                }\n            },\n            _modelFromElement: function (element) {\n                var row = element.closest('tr'), model = this.dataSource.getByUid(row.attr(kendo.attr('uid')));\n                return model;\n            },\n            _mouseDownHandler: function (e) {\n                var currentTarget = $(e.currentTarget);\n                if (!currentTarget.hasClass(listStyles.editCell)) {\n                    this._blurActiveElement();\n                }\n            },\n            _openEditorHandler: function (e) {\n                var that = this, td = $(e.currentTarget), isLockedCell = that.lockedTable && td.closest('table')[0] === that.lockedTable[0], selectable = that.selectable && that.selectable.options.multiple;\n                if (td.hasClass(listStyles.editCell) || td.has('a.k-grid-delete').length || td.has('button.k-grid-delete').length || td.closest('tbody')[0] !== that.tbody[0] && !isLockedCell || $(e.target).is(':input') || $(e.target).hasClass(listStyles.iconExpand) || $(e.target).hasClass(listStyles.iconCollapse)) {\n                    return;\n                }\n                if (that.editor) {\n                    if (that.editor.end()) {\n                        if (selectable) {\n                            $(activeElement()).blur();\n                        }\n                        that.closeCell();\n                        that.editCell(td);\n                    }\n                } else {\n                    that.editCell(td);\n                }\n            },\n            _render: function (options) {\n                TreeList.fn._render.call(this, options);\n                if (this.hasNestedColumns) {\n                    this.element.addClass('k-gantt-treelist-nested-columns');\n                }\n                if (options && options.length && !options.editedColumn) {\n                    if (this.options.rowHeight) {\n                        this._rowHeight(options);\n                    }\n                    this.trigger(RENDER);\n                }\n            },\n            _rowHeight: function (tasks) {\n                var content = this.content, options = this.options, rowHeight = typeof options.rowHeight === STRING ? options.rowHeight : options.rowHeight + 'px', table = $(kendo.format(SIZE_CALCULATION_TEMPLATE, rowHeight)), height;\n                content.append(table);\n                height = outerHeight(table.find('tr'));\n                table.remove();\n                this.element.find('[role=\"treegrid\"]').css('height', tasks.length * height + 'px');\n            },\n            _setData: function (tasks) {\n                this.dataSource.data(tasks);\n            },\n            _setWidth: function () {\n                this.element.find('.k-grid-header table').css('minWidth', this.options.listWidth);\n                this.content.find('table').css('minWidth', this.options.listWidth);\n            }\n        });\n        ui.plugin(GanttList);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}